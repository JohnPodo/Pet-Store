// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetMeUp.DAL;

#nullable disable

namespace PetMeUp.DAL.Migrations
{
    [DbContext(typeof(PetContext))]
    [Migration("20220319150222_PetsDetails2")]
    partial class PetsDetails2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PetMeUp.Models.Models.LogMeUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProcessSession")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SpecieId")
                        .HasColumnType("int");

                    b.Property<int>("Vat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecieId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PicId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FamilyId")
                        .HasColumnType("int");

                    b.Property<int?>("PicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.HasIndex("PicId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetSpecie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Life_Span")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaximumFemaleHeight")
                        .HasColumnType("float");

                    b.Property<double?>("MaximumMaleWeight")
                        .HasColumnType("float");

                    b.Property<double?>("MinimumFemaleHeight")
                        .HasColumnType("float");

                    b.Property<double?>("MinimumMaleWeight")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PicId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PicId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.Pic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pics");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.Pet", b =>
                {
                    b.HasOne("PetMeUp.Models.Models.PetSpecie", "Specie")
                        .WithMany("Pets")
                        .HasForeignKey("SpecieId");

                    b.Navigation("Specie");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetFamily", b =>
                {
                    b.HasOne("PetMeUp.Models.Models.Pic", "Pic")
                        .WithMany()
                        .HasForeignKey("PicId");

                    b.Navigation("Pic");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetGroup", b =>
                {
                    b.HasOne("PetMeUp.Models.Models.PetFamily", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("PetMeUp.Models.Models.Pic", "Pic")
                        .WithMany()
                        .HasForeignKey("PicId");

                    b.Navigation("Family");

                    b.Navigation("Pic");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetSpecie", b =>
                {
                    b.HasOne("PetMeUp.Models.Models.PetGroup", "Group")
                        .WithMany("Species")
                        .HasForeignKey("GroupId");

                    b.HasOne("PetMeUp.Models.Models.Pic", "Pic")
                        .WithMany()
                        .HasForeignKey("PicId");

                    b.Navigation("Group");

                    b.Navigation("Pic");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetGroup", b =>
                {
                    b.Navigation("Species");
                });

            modelBuilder.Entity("PetMeUp.Models.Models.PetSpecie", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
